@model OES.Models.BatchDetailsViewModel

@{
    ViewBag.Title = "GoToBatch";
    Layout = "~/Views/Shared/_TeacherNavbarPage1.cshtml";
}
@if (TempData["Status"] != null)
{
    <script>
        alert('@TempData["Status"]');
    </script>
}
<style>
    @@import url('https://fonts.googleapis.com/css2?family=Cormorant+Infant:wght@500&display=swap');

    body {
        font-family: 'Cormorant Infant', serif;
        background-color: #1c1f26;
        color: white;
        margin: 0;
    }

    #createExam {
        color: black;
    }

    .header {
        text-align: center;
        margin-top: 2rem;
        margin-bottom: 2rem;
        animation: slideInDown 0.8s ease-in-out;
    }

        .header h1 {
            font-size: 2.5rem;
        }

    .section {
        margin-bottom: 2rem;
        animation: slideInLeft 0.8s ease-in-out;
    }

    .container {
        display: flex;
        flex-direction: row;
        padding: 1rem;
        justify-content: space-between;
        gap: 2rem; /* Adds a 2rem gap between the batch details and student list sections */
    }

    .batch-section {
        width: 70%; /* 70% width for batch details */
    }

    .student-list-section {
        width: 30%; /* 30% width for student list */
        padding-left: 1rem;
    }

    .card {
        background-color: #1A2428;
        border: 1px solid #FFD700;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(255, 255, 255, 0.6); /* White shadow */
        transition: transform 0.3s ease, box-shadow 0.3s ease;
        color: white;
    }

    .card-header {
        background-color: #00FFFF;
        color: black;
        font-weight: bold;
        padding: 1rem;
        border-radius: 10px 10px 0 0;
    }

    .card-body {
        padding: 1.5rem;
    }

    .list-group-item {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    form.manage-students {
        background-color: #1A2428;
        border: 1px solid #FFD700;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(255, 255, 255, 0.6);
        color: white;
        padding: 1rem;
    }

        form.manage-students label {
            color: white;
        }

    .manage-students-section {
        margin-top: 2rem;
    }

    #createExam {
        color: black;
    }

    /* Animations */
    @@keyframes slideInLeft {
        from {
            transform: translateX(-100%);
            opacity: 0;
        }

        to {
            transform: translateX(0);
            opacity: 1;
        }
    }

    @@keyframes slideInDown {
        from {
            transform: translateY(-100%);
            opacity: 0;
        }

        to {
            transform: translateY(0);
            opacity: 1;
        }
    }

    .student-list {
        background-color: #1A2428;
        border: 1px solid #FFD700;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(255, 255, 255, 0.6);
        border-radius: 8px;
        padding: 20px;
    }

        .student-list h3 {
            font-size: 18px;
            margin-bottom: 15px;
        }

        .student-list ul {
            list-style-type: none;
            padding-left: 0;
        }

        .student-list li {
            margin-bottom: 8px;
        }

    #add-student-btn {
        background-color: #00FFFF; /* Cyan */
        border: none;
        border-radius: 6px;
        color: #0D1517;
    }

    .alert-toggle {
        display: none;
    }

    .button-group {
        display: flex;
        justify-content: space-between;
        gap: 1rem;
    }

    /* Button Styles */
    button {
        background-color: #00FFFF; /* Cyan */
        border: none;
        color: #0D1517; /* Dark color for text */
        border-radius: 6px;
        padding: 10px 20px;
        font-size: 1rem;
        cursor: pointer;
        transition: background-color 0.3s ease, transform 0.3s ease;
    }

        button:hover {
            background-color: #00cccc; /* Slightly darker cyan for hover effect */
            transform: scale(1.05); /* Slight scale effect on hover */
        }

    /* Adjusting the modal width */
    .modal-dialog {
        max-width: 40%; /* Adjust the percentage for a narrower or wider modal */
        width: auto; /* Make it auto-adjust based on content */
    }

    .modal-content {
        background-color: #1A2428; /* Match the page background color */
        border: 1px solid #FFD700; /* Golden border */
        border-radius: 12px; /* Rounded corners */
        box-shadow: 0 4px 6px rgba(255, 255, 255, 0.6); /* White shadow for a glowing effect */
        color: white; /* Ensure text is white */
    }


    .modal-header {
        background-color: #00FFFF; /* Cyan header */
        color: black;
        font-weight: bold;
        border-radius: 10px 10px 0 0;
    }

    .modal-footer {
        background-color: #1A2428; /* Match the background */
        border-top: 1px solid #FFD700; /* Border to separate footer */
    }
</style>

<div class="header">
    <h1>Batch Details</h1>
</div>

<div class="container">
    <!-- Batch Information Section -->
    <div class="batch-section">
        <div class="card">
            <div class="card-header">
                <h3 style="font-weight:bold">Batch Information</h3>
            </div>
            <div class="card-body">
                <p><strong>Batch ID:</strong> @Model.Batch.BatchId</p>
                <p><strong>Batch Name:</strong> @Model.Batch.BatchName</p>
                <p><strong>Institute Name:</strong> @Model.Batch.InstitutesName</p>
            </div>
        </div>

        <!-- Buttons for Create Exam, Exams, Results, and Exit -->
        <div class="button-group mt-4">
            <button type="button" data-bs-toggle="modal" data-bs-target="#createExam">
                Create Exam
            </button>
            @Html.ActionLink("Exams", "GoToExams", "Teacher", new { batchid = Model.Batch.BatchId }, new { @class = "btn", style = "background-color: #00FFFF; color: #0D1517;" })
            @Html.ActionLink("Results", "GoToResults", "Teacher", new { batchid = Model.Batch.BatchId }, new { @class = "btn", style = "background-color: #00FFFF; color: #0D1517;" })
            @Html.ActionLink("Exit", "TeacherDashboard", "Teacher", new { teacherId = @Model.Batch.TeacherId }, new { @class = "btn", style = "background-color: #00FFFF; color: #0D1517;" })

        </div>

        <!-- Manage Students Section -->
        <div class="manage-students-section">
            <h3>Manage Students</h3>
            <form method="post" action="@Url.Action("AddStudentToBatch", "Teacher")" class="manage-students">
                <input type="hidden" name="batchid" value="@Model.Batch.BatchId" />
                <div class="mb-3">
                    <label for="StudentId" class="form-label">Enter Student ID</label>
                    <input type="number" class="form-control" id="StudentId" name="StudentId" required />
                </div>
                <button type="submit" class="btn btn-success" id="add-student-btn">Add Student</button>
            </form>
        </div>
    </div>

    <!-- Students Section (Right Side) -->
    <div class="student-list-section student-list">
        <h3>Total Students: <span id="total-students">@Model.Students.Count()</span></h3>
        <ul id="student-list">
            @foreach (var student in Model.Students)
            {
                <li class="list-group-item">
                    @student.StuName (@student.StudentId)
                    <form method="post" action="@Url.Action("RemoveStudentFromBatch", "Teacher", new { studentId = student.StudentId, batchid = Model.Batch.BatchId })" style="display:inline;">
                        <button type="submit" class="btn btn-danger btn-sm" onclick="return confirm('Are you sure you want to remove this student?');">
                            Remove
                        </button>
                    </form>
                </li>
            }
        </ul>
    </div>
</div>

<!-- Bootstrap Alert for Success/Failure -->
<div class="alert alert-success alert-toggle" id="statusMessage" role="alert">
    Student added successfully!
</div>

<!-- Create Exam Modal -->
<div class="modal fade" id="createExam" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Create New Exam</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form method="post" action="@Url.Action("CreateExam", "Teacher")">
                    @Html.AntiForgeryToken()

                    <div class="mb-3">
                        <label for="ExamName" class="form-label">Exam Name</label>
                        <input type="text" class="form-control" id="ExamName" name="ExamName" required />
                    </div>

                    <div class="mb-3">
                        <label for="ExamSubName" class="form-label">Subject Name</label>
                        <input type="text" class="form-control" id="ExamSubName" name="ExamSubName" required />
                    </div>

                    <div class="mb-3">
                        <label for="ExamDate" class="form-label">Exam Date</label>
                        <input type="date" class="form-control" id="ExamDate" name="ExamDate" required />
                    </div>


                    <div class="mb-3">
                        <label for="ExamDuration" class="form-label">Exam Duration (in minutes)</label>
                        <input type="number" class="form-control" id="ExamDuration" name="ExamDuration" required />
                    </div>
                    <div class="mb-3">
                        <label for="ExamMarks" class="form-label">Exam Marks</label>
                        <input type="number" class="form-control" id="ExamMarks" name="ExamMarks" required />
                    </div>
                    <div class="mb-3">
                        <label for="BatchId" class="form-label">Batch ID</label>
                        <input type="text" class="form-control" id="BatchId" name="BatchId" value="@Model.Batch.BatchId" readonly />
                    </div>

                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="submit" class="btn btn-primary">Save Exam</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

</div>

<script>
    // Handling dynamic total student count after adding/removing students
    document.querySelector('#add-student-btn').addEventListener('click', function () {
        var totalStudents = document.querySelectorAll('#student-list li').length;
        document.querySelector('#total-students').innerText = totalStudents;
    });
</script>
<!-- Flatpickr CSS -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/flatpickr/dist/flatpickr.min.css">

<!-- Flatpickr JS -->
<script src="https://cdn.jsdelivr.net/npm/flatpickr"></script>
