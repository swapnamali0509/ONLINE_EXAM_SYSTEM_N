@model IEnumerable<Questions.Models.CreateExamInfo>
@{
    ViewBag.Title = "GoToExams";
    Layout = "~/Views/Shared/_TeacherNavbarPage1.cshtml";
}
<link rel="icon" href="~/Images/fevicon.png" type="image/png" />

@if (TempData["Status"] != null)
{
    <script>
        alert('@TempData["Status"]');
    </script>
}

<style>
    /* General Styles */
    body {
        font-family: 'Cormorant Infant', serif;
        background-color: #0D1517;
        color: white;
        font-size: 1.2rem;
    }

    /* Card Styling */
    .card {
        background-color: #1A2428;
        border: none;
        border: 1px solid #FFD700;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(255, 255, 255, 0.6);
        color: white;
        border-radius: 0.5rem;
        box-shadow: 0 4px 6px rgba(255, 255, 255, 0.6);
        transition: transform 0.3s, box-shadow 0.3s;
        opacity: 0; /* Start with invisible */
        transform: translateY(50px);
        animation: slideUp 0.6s ease-out forwards;
    }

    @@keyframes slideUp {
        0% {
            opacity: 0;
            transform: translateY(50px);
        }

        100% {
            opacity: 1;
            transform: translateY(0);
        }
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 6px 12px rgba(255, 255, 255, 0.9);
    }

    .card-body {
        padding: 1.5rem; /* Padding added to separate content from card edges */
    }

    /* Heading Styling */
    h2 {
        color: #00FFFF;
        margin-bottom: 2rem;
    }

    .card-title {
        color: #00FFFF;
    }

    /* Badge Styling */
    .badge {
        padding: 0.5rem 1rem;
        border-radius: 0.25rem;
    }

    .bg-success {
        background-color: #28a745;
        color: #fff;
    }

    .bg-warning {
        background-color: #ffc107;
        color: #333;
    }

    /* Button Styling */
    .btn {
        border-radius: 0.25rem;
        padding: 0.5rem 1rem;
        font-size: 0.9rem;
    }

    .btn-primary {
        background-color: #00FFFF;
        border-color: #00FFFF;
        color: #0D1517;
    }

        .btn-primary:hover {
            background-color: #008B8B;
            border-color: #008B8B;
        }

    .btn-outline-danger {
        color: #dc3545;
        border-color: #dc3545;
    }

        .btn-outline-danger:hover {
            color: #fff;
            background-color: #dc3545;
            border-color: #dc3545;
        }

    .btn-warning {
        background-color: #ffc107;
        color: #333;
    }

        .btn-warning:hover {
            background-color: #e0a800;
            color: #fff;
        }

    /* Responsive Adjustments */
    .row.g-4 {
        gap: 1.5rem; /* Spacing between rows and columns */
    }

    body {
        font-family: 'Cormorant Infant', serif;
    }

    @@import url('https://fonts.googleapis.com/css2?family=Cormorant+Infant:wght@500&display=swap');
</style>

<section class="container-fluid py-5 w-100" >
    @if (Model != null && Model.Any())
    {
        <div class="container-fluid">
            <h2 class="text-center mb-4">Exams</h2>
            <div class="row container-fluid">
                <!-- Ensures 3 cards per row on medium screens -->
                @foreach (var exam in Model)
                {
                    <div class="col-4 mb-4">
                        <div class="card h-100">
                            <div class="card-body text-center">
                                <h5 class="card-title fw-bold">@exam.ExamName</h5>
                                <p class="card-text">
                                    <strong>Subject:</strong> @exam.ExamSubName
                                </p>
                                <p class="card-text">
                                    <strong>Date:</strong> @exam.ExamDate.ToString("yyyy-MM-dd")
                                </p>
                                <p class="card-text">
                                    <strong>Marks:</strong> @exam.ExamMarks
                                </p>
                                <p class="card-text">
                                    <strong>Time:</strong> @exam.ExamDuration
                                </p>
                                <p class="card-text">
                                    <span class="badge @(exam.ExamStatus ? "bg-success" : "bg-warning text-dark")">
                                        @(exam.ExamStatus ? "Complete" : "Not Started")
                                    </span>
                                </p>

                                <div class="d-flex justify-content-center flex-wrap gap-2">
                                    @if (exam.ExamStatus)
                                    {
                                        <button class="btn btn-success btn-sm" disabled>Exam Complete</button>
                                        @Html.ActionLink("Delete Exam", "DeleteExamExams", "Teacher", new { examid = exam.ExamId }, new { @class = "btn btn-outline-danger btn-sm" })
                                    }
                                    else
                                    {
                                        @Html.ActionLink("Start Exam", "StartExamExams", "Teacher", new { examid = exam.ExamId }, new { @class = "btn btn-primary btn-sm" })
                                        @Html.ActionLink("Edit Exam", "EditExamExams", "Teacher", new { examid = exam.ExamId }, new { @class = "btn btn-warning btn-sm" })
                                        @Html.ActionLink("Delete Exam", "DeleteExamExams", "Teacher", new { examid = exam.ExamId }, new { @class = "btn btn-outline-danger btn-sm", onclick = "return confirm('Are you sure you want to delete this exam?');" })
                                   }
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
        var batchId = Model?.FirstOrDefault()?.BatchId;
        <div class="text-center mt-4">
            @Html.ActionLink("Exit", "GoToBatch", "Teacher", new { BatchId = batchId }, new { @class = "btn btn-primary px-5" })
        </div>
    }
    else
    {
        <div class="alert alert-warning alert-dismissible fade show" role="alert">
            <strong>No exams found.</strong> Please add exams to display here.
        </div>
    }
</section>
